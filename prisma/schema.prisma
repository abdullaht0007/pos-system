// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  username     String   @unique
  passwordHash String
  token        String?  @unique
  tokenExpiry  DateTime?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("users")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  sku         String   @unique
  priceCents  Int
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  inventoryItems InventoryItem[]
  saleItems      SaleItem[]

  @@map("products")
}

model InventoryItem {
  id        String   @id @default(cuid())
  productId String
  quantity  Int      @default(0)
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([productId])
  @@map("inventory_items")
}

enum PaymentMethod {
  CASH
  CARD
  OTHER
}

model Sale {
  id              String        @id @default(cuid())
  receiptNumber   String        @unique
  subtotalCents   Int
  discountPercent Int           @default(0)
  discountCents   Int           @default(0)
  totalCents      Int
  paymentMethod   PaymentMethod
  createdAt       DateTime      @default(now())

  items SaleItem[]

  @@map("sales")
}

model SaleItem {
  id             String @id @default(cuid())
  saleId         String
  productId      String
  quantity       Int
  unitPriceCents Int
  lineTotalCents Int

  sale    Sale    @relation(fields: [saleId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])

  @@map("sale_items")
}
